name: 订阅源抓取

# 触发方式
on:
  workflow_dispatch:  # 手动触发
  schedule:
    - cron: '0 */4 * * *'  # 每 4 小时执行一次
  watch:
    types: [started]

# - cron: '0 3,12 * * *'
# -'0 */4 * * *'
# -该规则表示每天从 0 点开始，每隔 4 个小时执行一次任务
# 表达式生成  https://crontab.guru/

jobs:
  fetch:
    runs-on: ubuntu-latest
    steps:

    # Step 1: 检出代码
    - name: Checkout Repository
      uses: actions/checkout@v4  # 最新稳定版本

    # Step 2: 安装 Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    # Step 3: 加载 pip 缓存，并报告命中情况
    - name: Cache pip packages
      id: cache-pip
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/run_in_Actions/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Cache Status Report
      run: |
        echo "Cache hit: ${{ steps.cache-pip.outputs.cache-hit }}"
        if [[ "${{ steps.cache-pip.outputs.cache-hit }}" == 'true' ]]; then
          echo "✅ 缓存命中"
        else
          echo "❌ 未命中缓存"
        fi

    # Step 4: 设置时区（GitHub 默认是 UTC）
    - name: Set Timezone
      run: sudo timedatectl set-timezone 'Asia/Shanghai'

    # Step 5: 安装依赖
    - name: Install Python Dependencies
      run: |
        pip install -r ./requirements.txt

    # Step 6: 执行主任务
    - name: Run Main Script
      run: |
        python ./main.py

    # Step 7: Git 提交
    - name: Commit Changes
      run: |
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add ./sub
        git commit -m "🍀 爬取订阅源 $(date '+%Y-%m-%d %H:%M:%S')" || echo "No changes to commit"

    # Step 8: 推送变更
    - name: Push to Main Branch
      uses: ad-m/github-push-action@master
      with:
        # github_token: ${{ secrets.TOKEN }} # 如使用 PAT，取消注释
        branch: main
